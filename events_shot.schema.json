{
  "$id": "/events/shot",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "additionalProperties": false,
  "description": "Describes a ball hit by a player's paddle.",
  "properties": {
    "is_volley": {
      "description": "whether this shot was a volley hit out of the air or not; omitted if we don't know",
      "type": "boolean"
    },
    "player_id": {
      "$ref": "/types/player_id",
      "description": "the player who hit the ball",
      "title": "Player ID"
    },
    "resulting_ball_movement": {
      "additionalProperties": false,
      "description": "stats related to how the ball moves as a result of being hit (omitted if we couldn't track the ball after the shot was made)",
      "properties": {
        "angles": {
          "additionalProperties": false,
          "properties": {
            "pitch": {
              "description": "The pitch angle, in degrees within a range of [-90, 90].\n\n- 0 degrees: straight shot (parallel to the ground)\n- 90 degrees: shot directly upwards (perpendicular to the ground)\n- -90 degrees: shot directly downwards (perpendicular to the ground)",
              "maximum": 90,
              "minimum": -90,
              "title": "Pitch Angle",
              "type": "number"
            },
            "yaw": {
              "description": "The yaw angle, in degrees within a range of (-180, 180].\n\n- 0 degrees: shot towards the left sideline (parallel to player's own baseline)\n- 90 degrees: shot towards the net directly (perpendicular to player's own baseline)\n- 180 degrees: shot towards the right sideline (parallel to player's own baseline)\n- Negative values are the same, but in the opposite direction (backwards).",
              "maximum": 180,
              "minimum": -180,
              "title": "Yaw Angle",
              "type": "number"
            }
          },
          "required": [
            "yaw",
            "pitch"
          ],
          "type": "object"
        },
        "crossed_net": {
          "description": "`true` if the ball crosses the net plane, else `false`. Note that this value will be `true` for ATPs (they cross the net plane without the ball necessarily ever going higher than the net).",
          "type": "boolean"
        },
        "direction": {
          "description": "Direction that the ball was hit from and to.",
          "enum": [
            "MidCrossLeft",
            "MidCrossRight",
            "DownTheMiddle",
            "LeftToMiddle",
            "LeftCrossRight",
            "DownTheLineLeft",
            "RightToMiddle",
            "RightCrossLeft",
            "DownTheLineRight"
          ],
          "type": "string"
        },
        "distance": {
          "description": "The distance the ball traveled (feet) before coming in contact with the net, court, paddle, etc.",
          "type": "number"
        },
        "end_zone": {
          "$ref": "/events/zone",
          "description": "Zone the ball bounced in or was next hit from (whichever happens first)",
          "title": "Zone"
        },
        "height_over_net": {
          "description": "The height the ball in feet when it _reaches_ the plane of the net. This is omitted if the ball never reaches the net plane. A ball that reaches the net but does not go over will have this value set to the height of the ball when it reaches the net (usually this will be greater than 0 but lower than the net height). Similarly, a ball that grazes the net cord and topples over will have its height over the net as roughly the height of the net at that location.  Note that the plane of the net exists at `y = 22`.",
          "type": "number"
        },
        "max_height": {
          "description": "Max height of the ball in its arc (feet).",
          "type": "number"
        },
        "speed": {
          "description": "Speed of the ball in MPH.",
          "type": "number"
        }
      },
      "required": [
        "end_zone",
        "angles",
        "distance",
        "speed",
        "max_height",
        "direction",
        "crossed_net"
      ],
      "title": "Resulting Ball Movement",
      "type": "object"
    },
    "start_zone": {
      "$ref": "/events/zone",
      "description": "where the ball was hit from",
      "title": "Zone"
    },
    "type": {
      "enum": [
        "drop",
        "drive",
        "lob"
      ],
      "type": "string"
    }
  },
  "required": [
    "player_id",
    "start_zone"
  ],
  "title": "Shot",
  "type": "object"
}